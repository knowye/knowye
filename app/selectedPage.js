/*
 * JS for selectedPage generated by Appery.io
 */
Apperyio.getProjectGUID = function() {
    return '148444cb-eb26-4cec-bc22-29bf794bc529';
};

function navigateTo(outcome, useAjax) {
    Apperyio.navigateTo(outcome, useAjax);
}

function adjustContentHeight() {
    Apperyio.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Apperyio.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Apperyio.setDetailContent(pageUrl);
}
Apperyio.AppPages = [{
    "name": "aboutPage",
    "location": "aboutPage.html"
}, {
    "name": "itemDetailsPage",
    "location": "itemDetailsPage.html"
}, {
    "name": "menuHeadingManagePage",
    "location": "menuHeadingManagePage.html"
}, {
    "name": "proprietorAnalyticsPage",
    "location": "proprietorAnalyticsPage.html"
}, {
    "name": "zzpromoEdit",
    "location": "zzpromoEdit.html"
}, {
    "name": "startScreen",
    "location": "startScreen.html"
}, {
    "name": "itemPage",
    "location": "itemPage.html"
}, {
    "name": "zzpromoManage",
    "location": "zzpromoManage.html"
}, {
    "name": "zzscannerPage",
    "location": "zzscannerPage.html"
}, {
    "name": "zztimeRangePage",
    "location": "zztimeRangePage.html"
}, {
    "name": "selectedPage",
    "location": "selectedPage.html"
}, {
    "name": "zzCSStestPage",
    "location": "zzCSStestPage.html"
}, {
    "name": "zzmenuPage",
    "location": "zzmenuPage.html"
}, {
    "name": "menuHistoryPage",
    "location": "menuHistoryPage.html"
}, {
    "name": "faqPage",
    "location": "faqPage.html"
}, {
    "name": "zzratingInfoPage",
    "location": "zzratingInfoPage.html"
}, {
    "name": "orderHistoryPage",
    "location": "orderHistoryPage.html"
}, {
    "name": "createAccount",
    "location": "createAccount.html"
}, {
    "name": "itemManagePage",
    "location": "itemManagePage.html"
}, {
    "name": "proprietorStartPage",
    "location": "proprietorStartPage.html"
}, {
    "name": "operationsRestaurantPage",
    "location": "operationsRestaurantPage.html"
}, {
    "name": "zzdetailedReviewPage",
    "location": "zzdetailedReviewPage.html"
}, {
    "name": "itemEditPage",
    "location": "itemEditPage.html"
}, {
    "name": "selectionHistoryPage",
    "location": "selectionHistoryPage.html"
}, {
    "name": "zzproprietorStatPage",
    "location": "zzproprietorStatPage.html"
}, {
    "name": "zzitemInventoryPage",
    "location": "zzitemInventoryPage.html"
}, {
    "name": "zzalertPage",
    "location": "zzalertPage.html"
}, {
    "name": "zzsearchPage",
    "location": "zzsearchPage.html"
}, {
    "name": "menuPage_v2",
    "location": "menuPage_v2.html"
}, {
    "name": "zzqrCodePage",
    "location": "zzqrCodePage.html"
}, {
    "name": "profilePage",
    "location": "profilePage.html"
}, {
    "name": "filterPage",
    "location": "filterPage.html"
}, {
    "name": "easterEggPage",
    "location": "easterEggPage.html"
}, {
    "name": "helpPage",
    "location": "helpPage.html"
}, {
    "name": "navigatePage",
    "location": "navigatePage.html"
}, {
    "name": "menuPreviewPage",
    "location": "menuPreviewPage.html"
}, {
    "name": "zzfacebookLogin",
    "location": "zzfacebookLogin.html"
}, {
    "name": "menu_shared",
    "location": "menu_shared.html"
}, {
    "name": "logoutPage",
    "location": "logoutPage.html"
}, {
    "name": "favoritesPage",
    "location": "favoritesPage.html"
}, {
    "name": "proprietorPage",
    "location": "proprietorPage.html"
}, {
    "name": "wishListPage",
    "location": "wishListPage.html"
}, {
    "name": "menuManagementPage",
    "location": "menuManagementPage.html"
}, {
    "name": "touPage",
    "location": "touPage.html"
}, {
    "name": "zzsettingsPage",
    "location": "zzsettingsPage.html"
}];


function selectedPage_js() {
    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'navigateButton': 'selectedPage_navigateButton',
        'seatingGrid': 'selectedPage_seatingGrid',
        'tableLabelCell': 'selectedPage_tableLabelCell',
        'tableLabel': 'selectedPage_tableLabel',
        'tableCell': 'selectedPage_tableCell',
        'table': 'selectedPage_table',
        'seatLabelCell': 'selectedPage_seatLabelCell',
        'dinerLabel': 'selectedPage_dinerLabel',
        'seatCell': 'selectedPage_seatCell',
        'seat': 'selectedPage_seat',
        'selectedLabel': 'selectedPage_selectedLabel',
        'removeLabel': 'selectedPage_removeLabel',
        'selectedList': 'selectedPage_selectedList',
        'selectedItemList': 'selectedPage_selectedItemList',
        'itemGrid': 'selectedPage_itemGrid',
        'itemNameCell': 'selectedPage_itemNameCell',
        'itemNameLabel': 'selectedPage_itemNameLabel',
        'itemPriceCell': 'selectedPage_itemPriceCell',
        'dollarSignLabel': 'selectedPage_dollarSignLabel',
        'itemButtonPriceCell': 'selectedPage_itemButtonPriceCell',
        'itemPriceLabel': 'selectedPage_itemPriceLabel',
        'mobilelistitembutton_5': 'selectedPage_mobilelistitembutton_5',
        'rateReminderLabel': 'selectedPage_rateReminderLabel',
        'costLabel': 'selectedPage_costLabel',
        'orderGrid': 'selectedPage_orderGrid',
        'orderTotalCell1': 'selectedPage_orderTotalCell1',
        'orderTotalLabel': 'selectedPage_orderTotalLabel',
        'orderTotalCell': 'selectedPage_orderTotalCell',
        'orderTotal': 'selectedPage_orderTotal',
        'adjustedGrid': 'selectedPage_adjustedGrid',
        'adjustedCell1': 'selectedPage_adjustedCell1',
        'adjustedLabel1': 'selectedPage_adjustedLabel1',
        'dollarCell1': 'selectedPage_dollarCell1',
        'dollarLabel1': 'selectedPage_dollarLabel1',
        'adjustedCell2': 'selectedPage_adjustedCell2',
        'adjustedInput': 'selectedPage_adjustedInput',
        'billGrid': 'selectedPage_billGrid',
        'orderLabelCellDELETE': 'selectedPage_orderLabelCellDELETE',
        'orderCellDELETE': 'selectedPage_orderCellDELETE',
        'taxLabelCell1': 'selectedPage_taxLabelCell1',
        'taxGrid': 'selectedPage_taxGrid',
        'taxLabelCell2': 'selectedPage_taxLabelCell2',
        'taxLabel': 'selectedPage_taxLabel',
        'taxRateLabelCell': 'selectedPage_taxRateLabelCell',
        'rateLabel': 'selectedPage_rateLabel',
        'orderTaxCell': 'selectedPage_orderTaxCell',
        'orderTax': 'selectedPage_orderTax',
        'tipCell': 'selectedPage_tipCell',
        'tipGrid': 'selectedPage_tipGrid',
        'tipButtonCell': 'selectedPage_tipButtonCell',
        'tipCalcButton': 'selectedPage_tipCalcButton',
        'tipLabelCell': 'selectedPage_tipLabelCell',
        'tipRateLabel': 'selectedPage_tipRateLabel',
        'taxCell': 'selectedPage_taxCell',
        'orderTip': 'selectedPage_orderTip',
        'billLabelCell': 'selectedPage_billLabelCell',
        'billTotalLabel': 'selectedPage_billTotalLabel',
        'billCell': 'selectedPage_billCell',
        'orderBill': 'selectedPage_orderBill',
        'splitGrid': 'selectedPage_splitGrid',
        'splitLabelCell': 'selectedPage_splitLabelCell',
        'splitLabel': 'selectedPage_splitLabel',
        'splitButtonCell': 'selectedPage_splitButtonCell',
        'splitSelectButton': 'selectedPage_splitSelectButton',
        'splitSelectButton-0': 'selectedPage_splitSelectButton-0',
        'splitAmountCell': 'selectedPage_splitAmountCell',
        'splitAmountLabel': 'selectedPage_splitAmountLabel',
        'clearButton': 'selectedPage_clearButton',
        'selectionHistoryButton': 'selectedPage_selectionHistoryButton',
        'tipPopupLabel': 'selectedPage_tipPopupLabel',
        'orderAmountGrid': 'selectedPage_orderAmountGrid',
        'tipOrderLabelCell': 'selectedPage_tipOrderLabelCell',
        'orderLabel': 'selectedPage_orderLabel',
        'tipOrderCell': 'selectedPage_tipOrderCell',
        'orderPopupAmount': 'selectedPage_orderPopupAmount',
        'orderAdjustGrid': 'selectedPage_orderAdjustGrid',
        'adjustedCell': 'selectedPage_adjustedCell',
        'adjustedLabel': 'selectedPage_adjustedLabel',
        'dollarCell': 'selectedPage_dollarCell',
        'dollarLabel': 'selectedPage_dollarLabel',
        'adjustBillCell': 'selectedPage_adjustBillCell',
        'adjustBillEntry': 'selectedPage_adjustBillEntry',
        'tipCalcGrid': 'selectedPage_tipCalcGrid',
        'empty1': 'selectedPage_empty1',
        'empty2': 'selectedPage_empty2',
        'tipTaxButtonCell': 'selectedPage_tipTaxButtonCell',
        'tipTaxButton': 'selectedPage_tipTaxButton',
        'includeTaxCheck': 'selectedPage_includeTaxCheck',
        'tipTaxCell': 'selectedPage_tipTaxCell',
        'taxAdjusted': 'selectedPage_taxAdjusted',
        'tipSelectButtonCell': 'selectedPage_tipSelectButtonCell',
        'tipSelectButton': 'selectedPage_tipSelectButton',
        'tipSelectButton-0': 'selectedPage_tipSelectButton-0',
        'tipSelectCell': 'selectedPage_tipSelectCell',
        'tipSelect': 'selectedPage_tipSelect',
        'tipEntryGrid': 'selectedPage_tipEntryGrid',
        'tipEntryCell': 'selectedPage_tipEntryCell',
        'tipEntry': 'selectedPage_tipEntry',
        'mobilegridcell_27': 'selectedPage_mobilegridcell_27',
        'mobilegridcell_28': 'selectedPage_mobilegridcell_28',
        'calculateTipButtonGrid': 'selectedPage_calculateTipButtonGrid',
        'calculateTipSaveCell': 'selectedPage_calculateTipSaveCell',
        'tipSaveButton': 'selectedPage_tipSaveButton',
        'calculateTipCancelCell': 'selectedPage_calculateTipCancelCell',
        'calculateTipCancelButton': 'selectedPage_calculateTipCancelButton',
        'deleteSelectedConfirmLabel': 'selectedPage_deleteSelectedConfirmLabel',
        'deleteHeadingConfirmGrid': 'selectedPage_deleteHeadingConfirmGrid',
        'deleteSelectedConfirmCell': 'selectedPage_deleteSelectedConfirmCell',
        'deleteSelectedConfirmButton': 'selectedPage_deleteSelectedConfirmButton',
        'deleteSelectedCancelCell': 'selectedPage_deleteSelectedCancelCell',
        'deleteSelectedCancelButton': 'selectedPage_deleteSelectedCancelButton'
    };
    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }
    /*
     * Nonvisual components
     */
    Apperyio.mappings = Apperyio.mappings || {};
    Apperyio.mappings["selectedPage_tipPopup_onclick_mapping_0"] = {
        "homeScreen": "selectedPage",
        "directions": [
            {
                "from_name": "currentOrder",
                "from_type": "SESSION_STORAGE",
                "to_name": "selectedPage",
                "to_type": "UI",
                "mappings": [
                    {
                        "source": "$['total']",
                        "target": "$['orderPopupAmount:text']"
                    }
                ]
            }
        ]
    };
    Apperyio.mappings["selectedPage_selectedPage_orderItem_query_service_onsuccess_mapping_0"] = {
        "homeScreen": "selectedPage",
        "directions": [
            {
                "from_name": "selectedPage_orderItem_query_service",
                "from_type": "SERVICE_RESPONSE",
                "to_name": "selectedPage",
                "to_type": "UI",
                "mappings": [
                    {
                        "source": "$['body'][i]",
                        "target_transformation": function(value, element) {
                            element.prop('item_id', value.item._id);
                            element.prop('order_item_id', value._id);
                        },
                        "target": "$['selectedItemList']"
                    },
                    {
                        "source": "$['body'][i]",
                        "target": "$['selectedItemList:text']"
                    },
                    {
                        "source": "$['body'][i]['item']['name']",
                        "target": "$['selectedItemList']['itemNameLabel:text']"
                    },
                    {
                        "source": "$['body'][i]['item']['price']",
                        "target_transformation": function(value, element) {
                            if (value) {
                                return value.toFixed(2);
                            } else {
                                return "";
                            }
                        },
                        "target": "$['selectedItemList']['itemPriceLabel:text']"
                    }
                ]
            },
            {
                "from_name": "selectedPage_orderItem_query_service",
                "from_type": "SERVICE_RESPONSE",
                "to_name": "menuItemsList",
                "to_type": "SESSION_STORAGE",
                "mappings": [
                    {
                        "source": "$['body'][i]['_id']",
                        "target": "$[i]['id']"
                    },
                    {
                        "source": "$['body'][i]['item']['name']",
                        "target": "$[i]['heading']"
                    },
                    {
                        "source": "$['body'][i]['item']['price']",
                        "target": "$[i]['price']"
                    },
                    {
                        "source": "$['body'][i]['quantity']",
                        "target": "$[i]['order']"
                    },
                    {
                        "source": "$['body'][i]['quantity']",
                        "target": "$[i]['quantity']"
                    }
                ]
            },
            {
                "from_name": "currentVendor",
                "from_type": "SESSION_STORAGE",
                "to_name": "selectedPage",
                "to_type": "UI",
                "mappings": [
                    {
                        "source": "$['taxRate']",
                        "target_transformation": function(value, element) {
                            return '( ' + (value * 100).toFixed(2) + '% )';
                        },
                        "target": "$['rateLabel:text']"
                    }
                ]
            }
        ]
    };
    Apperyio.mappings["selectedPage_selectedPage_orderItem_query_service_onbeforesend_mapping_0"] = {
        "homeScreen": "selectedPage",
        "directions": [
            {
                "to_name": "selectedPage_orderItem_query_service",
                "to_type": "SERVICE_REQUEST",
                "to_default": {
                    "headers": {
                        "X-Appery-Database-Id": "{database_id}",
                        "X-Appery-Session-Token": "{session_token}"
                    },
                    "parameters": {
                        "include": "order,order.user,order.user.status,order.user.vendor_lk,order.user.vendor_lk.state,order.user.vendor_lk.country,order.vendor,order.vendor.state,order.vendor.country,item,item.cuisine_lk,item.ingredientMain_lk,item.ingredientMain_lk.category_lk,item.ingredientHidden_lk,item.ingredientHidden_lk.category_lk,item.ingredientFeatured_lk,item.ingredientFeatured_lk.category_lk,item.rating_lk,item.rating_lk.item,item.rating_lk.item.cuisine_lk,item.rating_lk.item.ingredientMain_lk,item.rating_lk.item.ingredientHidden_lk,item.rating_lk.item.ingredientFeatured_lk,item.rating_lk.item.rating_lk,item.rating_lk.item.vendor_lk,item.rating_lk.item.heading,item.rating_lk.user,item.vendor_lk,item.vendor_lk.state,item.vendor_lk.country,item.heading"
                    },
                    "body": null
                },
                "mappings": [
                    {
                        "target_transformation": function(value) {
                            return {
                                order: null
                            };
                        },
                        "target": "$['parameters']['where']"
                    }
                ]
            }
        ]
    };

    Apperyio.mappings["selectedPage_SelectedPage_orderItem_delete_service_onbeforesend_mapping_0"] = {
        "homeScreen": "selectedPage",
        "directions": [
            {
                "from_name": "selectedItem",
                "from_type": "SESSION_STORAGE",
                "to_name": "SelectedPage_orderItem_delete_service",
                "to_type": "SERVICE_REQUEST",
                "to_default": {
                    "headers": {
                        "X-Appery-Database-Id": "{database_id}",
                        "X-Appery-Session-Token": "{session_token}"
                    },
                    "parameters": {},
                    "body": null
                },
                "mappings": [
                    {
                        "source": "$",
                        "target": "$['parameters']['_id']"
                    }
                ]
            }
        ]
    };
    Apperyio.mappings["selectedPage_selectedPage_GenericService_onsuccess_mapping_0"] = {
        "homeScreen": "selectedPage",
        "directions": [
            {
                "from_name": "currentVendor",
                "from_type": "SESSION_STORAGE",
                "to_name": "selectedPage",
                "to_type": "UI",
                "mappings": [
                    {
                        "source": "$['taxRate']",
                        "target_transformation": function(value, element) {
                            return '( ' + (value * 100).toFixed(2) + '% )';
                        },
                        "target": "$['rateLabel:text']"
                    }
                ]
            },
            {
                "from_name": "currentOrderItems",
                "from_type": "SESSION_STORAGE",
                "to_name": "selectedPage",
                "to_type": "UI",
                "mappings": [
                    {
                        "source": "$[i]",
                        "target_transformation": function(value, element) {
                            element.prop('item_id', value.item_id);
                            element.prop('order_item_id', value.id);
                        },
                        "target": "$['selectedItemList']"
                    },
                    {
                        "source": "$[i]['item_name']",
                        "target": "$['selectedItemList']['itemNameLabel:text']"
                    },
                    {
                        "source": "$[i]['price']",
                        "target": "$['selectedItemList']['itemPriceLabel:text']"
                    }
                ]
            }
        ]
    };
    Apperyio.mappings["selectedPage_selectedPage_selected_query_service_onsuccess_mapping_0"] = {
        "homeScreen": "selectedPage",
        "directions": [
            {
                "from_name": "currentVendor",
                "from_type": "SESSION_STORAGE",
                "to_name": "selectedPage",
                "to_type": "UI",
                "mappings": [
                    {
                        "source": "$['taxRate']",
                        "target_transformation": function(value, element) {
                            return '( ' + (value * 100).toFixed(2) + '% )';
                        },
                        "target": "$['rateLabel:text']"
                    }
                ]
            },
            {
                "from_name": "selectedPage_selected_query_service",
                "from_type": "SERVICE_RESPONSE",
                "to_name": "selectedPage",
                "to_type": "UI",
                "mappings": [
                    {
                        "source": "$['body'][i]",
                        "target_transformation": function(value, element) {
                            element.prop('item_id', value.itemID._id);
                            element.prop('order_item_id', value._id);
                        },
                        "target": "$['selectedItemList']"
                    },
                    {
                        "source": "$['body'][i]['itemID']['name']",
                        "target": "$['selectedItemList']['itemNameLabel:text']"
                    },
                    {
                        "source": "$['body'][i]['itemID']['price']",
                        "target_transformation": function(value, element) {
                            if (!value || value === "") {
                                value = "0.00";
                            }
                            return value;
                        },
                        "target": "$['selectedItemList']['itemPriceLabel:text']"
                    }
                ]
            }
        ]
    };
    Apperyio.mappings["selectedPage_selectedPage_selected_query_service_onbeforesend_mapping_0"] = {
        "homeScreen": "selectedPage",
        "directions": [
            {
                "from_name": "userId",
                "from_type": "LOCAL_STORAGE",
                "to_name": "selectedPage_selected_query_service",
                "to_type": "SERVICE_REQUEST",
                "to_default": {
                    "headers": {
                        "X-Appery-Database-Id": "{database_id}"
                    },
                    "parameters": {
                        "include": "itemID,itemID.cuisine_lk,itemID.ingredientMain_lk,itemID.ingredientMain_lk.category_lk,itemID.ingredientHidden_lk,itemID.ingredientHidden_lk.category_lk,itemID.ingredientFeatured_lk,itemID.ingredientFeatured_lk.category_lk,itemID.rating_lk,itemID.rating_lk.item,itemID.rating_lk.item.cuisine_lk,itemID.rating_lk.item.ingredientMain_lk,itemID.rating_lk.item.ingredientHidden_lk,itemID.rating_lk.item.ingredientFeatured_lk,itemID.rating_lk.item.rating_lk,itemID.rating_lk.item.vendor_lk,itemID.rating_lk.item.heading,itemID.rating_lk.user,itemID.rating_lk.user.status,itemID.rating_lk.user.vendor_lk,itemID.vendor_lk,itemID.vendor_lk.state,itemID.vendor_lk.country,itemID.heading,itemID.heading.vendor,itemID.heading.headingParent,itemID.heading.owner_lk,userID,userID.status,userID.vendor_lk,userID.vendor_lk.state,userID.vendor_lk.country,vendor_lk,vendor_lk.state,vendor_lk.country"
                    },
                    "body": null
                },
                "mappings": [
                    {
                        "source": "$",
                        "target_transformation": function(value) {
                            return querySelectedItems();
                        },
                        "target": "$['parameters']['where']"
                    }
                ]
            },
            {
                "from_name": "sessionToken",
                "from_type": "SESSION_STORAGE",
                "to_name": "selectedPage_selected_query_service",
                "to_type": "SERVICE_REQUEST",
                "to_default": {
                    "headers": {
                        "X-Appery-Database-Id": "{database_id}"
                    },
                    "parameters": {
                        "include": "itemID,itemID.cuisine_lk,itemID.ingredientMain_lk,itemID.ingredientMain_lk.category_lk,itemID.ingredientHidden_lk,itemID.ingredientHidden_lk.category_lk,itemID.ingredientFeatured_lk,itemID.ingredientFeatured_lk.category_lk,itemID.rating_lk,itemID.rating_lk.item,itemID.rating_lk.item.cuisine_lk,itemID.rating_lk.item.ingredientMain_lk,itemID.rating_lk.item.ingredientHidden_lk,itemID.rating_lk.item.ingredientFeatured_lk,itemID.rating_lk.item.rating_lk,itemID.rating_lk.item.vendor_lk,itemID.rating_lk.item.heading,itemID.rating_lk.user,itemID.rating_lk.user.status,itemID.rating_lk.user.vendor_lk,itemID.vendor_lk,itemID.vendor_lk.state,itemID.vendor_lk.country,itemID.heading,itemID.heading.vendor,itemID.heading.headingParent,itemID.heading.owner_lk,userID,userID.status,userID.vendor_lk,userID.vendor_lk.state,userID.vendor_lk.country,vendor_lk,vendor_lk.state,vendor_lk.country"
                    },
                    "body": null
                },
                "mappings": [
                    {
                        "source": "$",
                        "target": "$['headers']['X-Appery-Session-Token']"
                    }
                ]
            }
        ]
    };
    Apperyio.mappings["selectedPage_selectedPage_selected_delete_service_onbeforesend_mapping_0"] = {
        "homeScreen": "selectedPage",
        "directions": [
            {
                "from_name": "sessionToken",
                "from_type": "SESSION_STORAGE",
                "to_name": "selectedPage_selected_delete_service",
                "to_type": "SERVICE_REQUEST",
                "to_default": {
                    "headers": {
                        "X-Appery-Database-Id": "{database_id}"
                    },
                    "parameters": {},
                    "body": null
                },
                "mappings": [
                    {
                        "source": "$",
                        "target": "$['headers']['X-Appery-Session-Token']"
                    }
                ]
            },
            {
                "from_name": "selectedItem",
                "from_type": "SESSION_STORAGE",
                "to_name": "selectedPage_selected_delete_service",
                "to_type": "SERVICE_REQUEST",
                "to_default": {
                    "headers": {
                        "X-Appery-Database-Id": "{database_id}"
                    },
                    "parameters": {},
                    "body": null
                },
                "mappings": [
                    {
                        "source": "$",
                        "target": "$['parameters']['_id']"
                    }
                ]
            }
        ]
    };
    Apperyio.mappings["selectedPage_selectedPage_clearSelections_service_onbeforesend_mapping_0"] = {
        "homeScreen": "selectedPage",
        "directions": [
            {
                "from_name": "sessionToken",
                "from_type": "SESSION_STORAGE",
                "to_name": "selectedPage_clearSelections_service",
                "to_type": "SERVICE_REQUEST",
                "to_default": {
                    "headers": {
                        "X-Appery-Session-Token": "c8795799-5f85-4409-a975-c019bfa04264",
                        "Content-Type": "text/plain"
                    },
                    "parameters": {},
                    "body": null
                },
                "mappings": [
                    {
                        "source": "$",
                        "target": "$['headers']['X-Appery-Session-Token']"
                    }
                ]
            }
        ]
    };
    Apperyio.datasources = Apperyio.datasources || {};
    window.selectedPage_orderItem_query_service = Apperyio.datasources.selectedPage_orderItem_query_service = new Apperyio.DataSource(projectMdb1_orderItem_query_service, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["selectedPage_selectedPage_orderItem_query_service_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {
        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["selectedPage_selectedPage_orderItem_query_service_onsuccess_mapping_0"]);
            console.log('[selectedPage_orderItem_query_service]');
            storageSet('currentOrder', Apperyio.getModel('currentOrder'));
            updateTotals();
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });
    window.SelectedPage_orderItem_delete_service = Apperyio.datasources.SelectedPage_orderItem_delete_service = new Apperyio.DataSource(projectMdb1_orderItem_delete_service, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["selectedPage_SelectedPage_orderItem_delete_service_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {
        },
        "onSuccess": function(data) {
            Apperyio('deleteSelectionConfirmPopup').popup('close');
            try {
                selectedPage_orderItem_query_service.execute({});
            } catch (e) {
                console.error(e);
                hideSpinner();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });
    window.selectedPage_GenericService = Apperyio.datasources.selectedPage_GenericService = new Apperyio.DataSource(GenericService, {
        "onBeforeSend": function(jqXHR) {},
        "onComplete": function(jqXHR, textStatus) {
        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["selectedPage_selectedPage_GenericService_onsuccess_mapping_0"]);
            console.log('[selectedPage_selected_query_service]');
            updateTotals();
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });
    window.selectedPage_selected_query_service = Apperyio.datasources.selectedPage_selected_query_service = new Apperyio.DataSource(projectMdb1_selected_query_service, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["selectedPage_selectedPage_selected_query_service_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {
        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["selectedPage_selectedPage_selected_query_service_onsuccess_mapping_0"]);
            //console.log('[selectedPage] data:',data);
            var currentOrderItems = [];
            for (var i = 0; i < data.length; i++) {
                var currentItem = data[i].itemID;
                currentOrderItems.push({
                    id: data[i]._id,
                    item_id: currentItem.id,
                    item_name: currentItem.heading,
                    price: currentItem.price
                });
            }
            storageSet('currentOrderItems', currentOrderItems);
            updateTotals();
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });
    window.selectedPage_selected_delete_service = Apperyio.datasources.selectedPage_selected_delete_service = new Apperyio.DataSource(projectMdb1_selected_delete_service, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["selectedPage_selectedPage_selected_delete_service_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {
        },
        "onSuccess": function(data) {
            try {
                selectedPage_selected_query_service.execute({});
            } catch (e) {
                console.error(e);
                hideSpinner();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });
    window.selectedPage_clearSelections_service = Apperyio.datasources.selectedPage_clearSelections_service = new Apperyio.DataSource(clearSelections_service, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["selectedPage_selectedPage_clearSelections_service_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {
        },
        "onSuccess": function(data) {
            try {
                selectedPage_selected_query_service.execute({});
            } catch (e) {
                console.error(e);
                hideSpinner();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });
    Apperyio.CurrentScreen = 'selectedPage';
    _.chain(Apperyio.mappings)
        .filter(function(m) {
            return m.homeScreen === Apperyio.CurrentScreen;
        })
        .each(Apperyio.UIHandler.hideTemplateComponents);
    /*
     * Events and handlers
     */
    // On Load
    var selectedPage_onLoad = function() {
        selectedPage_elementsExtraJS();
        initPage();
        selectedPage_deviceEvents();
        selectedPage_windowEvents();
        selectedPage_elementsEvents();
    };
    // screen window events
    function selectedPage_windowEvents() {
        $('#selectedPage').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });
        $('#selectedPage').on({
            pageshow: function(event) {
                try {
                    selectedPage_selected_query_service.execute({});
                } catch (e) {
                    console.error(e);
                    hideSpinner();
                };
            },
        });
    };
    // device events
    function selectedPage_deviceEvents() {
        document.addEventListener("deviceready", function() {
        });
    };
    // screen elements extra js
    function selectedPage_elementsExtraJS() {
        // screen (selectedPage) extra code
        /* selectedList */
        listView = $("#selectedPage_selectedList");
        theme = listView.attr("data-theme");
        if (typeof theme !== 'undefined') {
            var themeClass = "ui-btn-up-" + theme;
            listItem = $("#selectedPage_selectedList .ui-li-static");
            $.each(listItem, function(index, value) {
                $(this).addClass(themeClass);
            });
        }
        /* selectedItemList */
        /* splitSelectButton */
        $("#selectedPage_splitSelectButton").parent().find("a.ui-btn").attr("tabindex", "15");
        /* tipPopup */
        $("#selectedPage_tipPopup").popup("option", "positionTo", "window");
        /* tipSelectButton */
        $("#selectedPage_tipSelectButton").parent().find("a.ui-btn").attr("tabindex", "3");
        /* deleteSelectionConfirmPopup */
        $("#selectedPage_deleteSelectionConfirmPopup").popup("option", "positionTo", "window");
    };
    // screen elements handler
    function selectedPage_elementsEvents() {
        $(document).on("click", "a :input,a a,a fieldset label", function(event) {
            event.stopPropagation();
        });
        $(document).off("click", '#selectedPage_selectedHeader [name="navigateButton"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    navigateRB();
                }
            },
        }, '#selectedPage_selectedHeader [name="navigateButton"]');
        $(document).off("click swipeleft", '#selectedPage_selectedContainer [name="selectedItemList"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    storageSet('selectedItem', this.item_id);
                    Apperyio.navigateTo('itemDetailsPage', {
                        transition: 'slide',
                        reverse: false
                    });
                }
            },
            swipeleft: function(event) {
                storageSet('selectedItem', this.order_item_id);
                var popupElement = Apperyio("deleteSelectionConfirmPopup");
                if (popupElement.popup("option", "positionTo") === "origin") {
                    popupElement.popup("open", {
                        transition: "slide",
                        positionTo: "#" + $(this).attr("id")
                    });
                } else {
                    popupElement.popup("open", {
                        transition: "slide"
                    });
                };
            },
        }, '#selectedPage_selectedContainer [name="selectedItemList"]');
        $(document).off("input", '#selectedPage_selectedContainer [name="adjustedInput"]').on({
            input: function(event) {
                updateTotals();
            },
        }, '#selectedPage_selectedContainer [name="adjustedInput"]');
        $(document).off("click", '#selectedPage_selectedContainer [name="tipCalcButton"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    var popupElement = Apperyio("tipPopup");
                    if (popupElement.popup("option", "positionTo") === "origin") {
                        popupElement.popup("open", {
                            transition: "pop",
                            positionTo: "#" + $(this).attr("id")
                        });
                    } else {
                        popupElement.popup("open", {
                            transition: "pop"
                        });
                    };
                }
            },
        }, '#selectedPage_selectedContainer [name="tipCalcButton"]');
        $(document).off("change", '#selectedPage_selectedContainer [name="splitSelectButton"]').on({
            change: function(event) {
                splitBill();
            },
        }, '#selectedPage_selectedContainer [name="splitSelectButton"]');
        $(document).off("click", '#selectedPage_selectedContainer [name="clearButton"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    try {
                        selectedPage_clearSelections_service.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };
                }
            },
        }, '#selectedPage_selectedContainer [name="clearButton"]');
        $(document).off("click", '#selectedPage_selectedContainer [name="selectionHistoryButton"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    Apperyio.navigateTo('selectionHistoryPage', {
                        transition: 'slide',
                        reverse: false
                    });
                }
            },
        }, '#selectedPage_selectedContainer [name="selectionHistoryButton"]');
        $(document).off("click", '#selectedPage_tipPopup').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    Apperyio.processMappingAction(Apperyio.mappings["selectedPage_tipPopup_onclick_mapping_0"]);
                }
            },
        }, '#selectedPage_tipPopup');
        $(document).off("change", '#selectedPage_tipPopup [name="includeTaxCheck"]').on({
            change: function(event) {
                updateTotals();
            },
        }, '#selectedPage_tipPopup [name="includeTaxCheck"]');
        $(document).off("change", '#selectedPage_tipPopup [name="tipSelectButton"]').on({
            change: function(event) {
                Apperyio('tipEntry').val('');
                updateTotals();
            },
        }, '#selectedPage_tipPopup [name="tipSelectButton"]');
        $(document).off("click", '#selectedPage_tipPopup [name="tipSaveButton"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    var currentOrder = storageGet('currentOrder');
                    currentOrder.tip = parseFloat(Apperyio('tipSelect').text(), 10);
                    storageSet('currentOrder', currentOrder);
                    updateTotals();
                    Apperyio('tipPopup').popup('close');
                }
            },
        }, '#selectedPage_tipPopup [name="tipSaveButton"]');
        $(document).off("click", '#selectedPage_tipPopup [name="calculateTipCancelButton"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    Apperyio('deleteSelectionConfirmPopup').popup('close');
                }
            },
        }, '#selectedPage_tipPopup [name="calculateTipCancelButton"]');
        $(document).off("click", '#selectedPage_deleteSelectionConfirmPopup [name="deleteSelectedConfirmButton"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    Apperyio('deleteSelectionConfirmPopup').popup('close');
                    try {
                        selectedPage_selected_delete_service.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };
                }
            },
        }, '#selectedPage_deleteSelectionConfirmPopup [name="deleteSelectedConfirmButton"]');
        $(document).off("click", '#selectedPage_deleteSelectionConfirmPopup [name="deleteSelectedCancelButton"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    Apperyio('deleteSelectionConfirmPopup').popup('close');
                }
            },
        }, '#selectedPage_deleteSelectionConfirmPopup [name="deleteSelectedCancelButton"]');
    };
    $(document).off("pagebeforeshow", "#selectedPage").on("pagebeforeshow", "#selectedPage", function(event, ui) {
        Apperyio.CurrentScreen = "selectedPage";
        _.chain(Apperyio.mappings)
            .filter(function(m) {
                return m.homeScreen === Apperyio.CurrentScreen;
            })
            .each(Apperyio.UIHandler.hideTemplateComponents);
    });
    selectedPage_onLoad();
};
$(document).off("pagecreate", "#selectedPage").on("pagecreate", "#selectedPage", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    selectedPage_js();
});